// Code generated by MockGen. DO NOT EDIT.
// Source: shortener.go
//
// Generated by this command:
//
//	mockgen -source=shortener.go -destination shortener_mock.gen.go -package storage
//

// Package storage is a generated GoMock package.
package storage

import (
	context "context"
	reflect "reflect"

	domain "github.com/mars-terminal/mechta/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockShortener is a mock of Shortener interface.
type MockShortener struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerMockRecorder
	isgomock struct{}
}

// MockShortenerMockRecorder is the mock recorder for MockShortener.
type MockShortenerMockRecorder struct {
	mock *MockShortener
}

// NewMockShortener creates a new mock instance.
func NewMockShortener(ctrl *gomock.Controller) *MockShortener {
	mock := &MockShortener{ctrl: ctrl}
	mock.recorder = &MockShortenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortener) EXPECT() *MockShortenerMockRecorder {
	return m.recorder
}

// CreateLink mocks base method.
func (m *MockShortener) CreateLink(ctx context.Context, cmd CreateLinkCMD) (domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLink", ctx, cmd)
	ret0, _ := ret[0].(domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLink indicates an expected call of CreateLink.
func (mr *MockShortenerMockRecorder) CreateLink(ctx, cmd any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLink", reflect.TypeOf((*MockShortener)(nil).CreateLink), ctx, cmd)
}

// DeleteLinkByShortUrl mocks base method.
func (m *MockShortener) DeleteLinkByShortUrl(ctx context.Context, shortURL string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteLinkByShortUrl", ctx, shortURL)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteLinkByShortUrl indicates an expected call of DeleteLinkByShortUrl.
func (mr *MockShortenerMockRecorder) DeleteLinkByShortUrl(ctx, shortURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteLinkByShortUrl", reflect.TypeOf((*MockShortener)(nil).DeleteLinkByShortUrl), ctx, shortURL)
}

// GetLinkByShortLink mocks base method.
func (m *MockShortener) GetLinkByShortLink(ctx context.Context, shortURL string) (domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLinkByShortLink", ctx, shortURL)
	ret0, _ := ret[0].(domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLinkByShortLink indicates an expected call of GetLinkByShortLink.
func (mr *MockShortenerMockRecorder) GetLinkByShortLink(ctx, shortURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLinkByShortLink", reflect.TypeOf((*MockShortener)(nil).GetLinkByShortLink), ctx, shortURL)
}

// GetLinks mocks base method.
func (m *MockShortener) GetLinks(ctx context.Context) ([]domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLinks", ctx)
	ret0, _ := ret[0].([]domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLinks indicates an expected call of GetLinks.
func (mr *MockShortenerMockRecorder) GetLinks(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLinks", reflect.TypeOf((*MockShortener)(nil).GetLinks), ctx)
}

// GetRawLinkByShortLink mocks base method.
func (m *MockShortener) GetRawLinkByShortLink(ctx context.Context, shortURL string) (domain.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRawLinkByShortLink", ctx, shortURL)
	ret0, _ := ret[0].(domain.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRawLinkByShortLink indicates an expected call of GetRawLinkByShortLink.
func (mr *MockShortenerMockRecorder) GetRawLinkByShortLink(ctx, shortURL any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRawLinkByShortLink", reflect.TypeOf((*MockShortener)(nil).GetRawLinkByShortLink), ctx, shortURL)
}

// UpdateLinkByShortUrl mocks base method.
func (m *MockShortener) UpdateLinkByShortUrl(ctx context.Context, cmd UpdateLinkCMD) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLinkByShortUrl", ctx, cmd)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateLinkByShortUrl indicates an expected call of UpdateLinkByShortUrl.
func (mr *MockShortenerMockRecorder) UpdateLinkByShortUrl(ctx, cmd any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLinkByShortUrl", reflect.TypeOf((*MockShortener)(nil).UpdateLinkByShortUrl), ctx, cmd)
}
